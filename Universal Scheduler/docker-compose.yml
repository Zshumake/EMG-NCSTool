# Universal Medical Residency Scheduler - Docker Compose
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: scheduler_postgres
    environment:
      - POSTGRES_DB=medical_scheduler
      - POSTGRES_USER=scheduler_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-scheduler_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scheduler_user -d medical_scheduler"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scheduler_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: scheduler_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_pass}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scheduler_network

  # Main Application
  app:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    container_name: scheduler_app
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://scheduler_user:${POSTGRES_PASSWORD:-scheduler_pass}@postgres:5432/medical_scheduler
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_pass}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
    ports:
      - "8000:8000"
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - scheduler_network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: scheduler_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - scheduler_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  app_uploads:
    driver: local

networks:
  scheduler_network:
    driver: bridge